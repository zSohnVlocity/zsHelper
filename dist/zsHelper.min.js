!function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){return o(e[i][1][r]||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){!function(){function registerHelper(){window.zsHelper={decodeAngularError:decodeAngularError}}function parseURL(input){var tmp=/^(.*?)([^\/]*)$/.exec(input),root=tmp[1],stem=tmp[2];tmp=/^([^?#]*)(\?[^#]*)?(#.*)?$/.exec(stem);var name=tmp[1],query={$raw:tmp[2]&&tmp[2].substr(1)},hash=tmp[3]&&tmp[3].substr(1);return query.$raw&&query.$raw.split("&").forEach(function(param){var tmp=param.split("=");query[tmp[0]]=tmp[1]}),{root:root,stem:{$raw:stem,name:name,query:query,hash:hash}}}function decodeAngularError(input){input=input||window.location.href;var links=[];return decodeAngularErrorAux(input,links),links}function decodeAngularErrorAux(input,links){var link,parsed=parseURL(input);if(!parsed.stem.query.p1)return!0;links.push(parsed.root+parsed.stem.name+"?p0="+parsed.stem.query.p0),link=decodeURIComponent(parsed.stem.query.p1).split(/\s+/)[2],decodeAngularErrorAux(link,links)&&links.push(decodeURIComponent(parseURL(input).stem.query.p1))}function loadFiles(){window.zsHelper.testPropGetType=require("./modules/regressionTester/main.js")}!function(){registerHelper(),loadFiles()}()}()},{"./modules/regressionTester/main.js":2}],2:[function(require,module,exports){function RegressionTester(tgtFn,prevVers){function registerTgt(tgtFn){return this.tgtFn=tgtFn,tgtFn=function(){return window.setTimeout(storeArgs(this,arguments)),me.tgtFn.apply(this,arguments)},this.tgtFn}function storeArgs(that,args){this.those.includes(args[i])||this.those.push(args[i]);for(var i=0;i<args.length;i++)void 0===this.argStor[0]&&(this.argStor[0]=[]),this.argStor[0].includes(args[i])||this.argStor[i].push(args[i])}function registerPrev(prevVers){return this.prevFn=prevVers}me=this,this.those=[],this.argStor=[],this.resultDiff=[],function(){tgtFn&&registerTgt(tgtFn),prevVers&&registerPrev(prevVers)}()}modules.export=RegressionTester},{}]},{},[1]);
